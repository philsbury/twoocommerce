{##
 # Single Product tabs
 #
 # This template can be overridden by copying it to yourtheme/woocommerce/single-product/tabs/tabs.php.
 #
 # HOWEVER, on occasion WooCommerce will need to update template files and you
 # (the theme developer) will need to copy the new files to your theme to
 # maintain compatibility. We try to do this as little as possible, but it does
 # happen. When this occurs the version of the template file will be bumped and
 # the readme will list any important changes.
 #
 # @see     https://docs.woocommerce.com/document/template-structure/
 # @package WooCommerce\Templates
 # @version 3.8.0
 #}


{##
 # Filter tabs and allow third parties to add their own.
 #
 # Each tab is an array containing title, callback and priority.
 #
 # @see woocommerce_default_product_tabs()
 #}
{% set product_tabs = []|apply_filters('woocommerce_product_tabs') %}

{% if product_tabs %}

	<div class="woocommerce-tabs wc-tabs-wrapper">
		<ul class="tabs wc-tabs" role="tablist">
			{% for key, product_tab in product_tabs %}
				<li class="{{ key }}_tab" id="tab-title-{{ key|e('html_attr') }}" role="tab" aria-controls="tab-{{ key|e('html_attr') }}">
					<a href="#tab-{{ key|e('html_attr') }}">
            {{ fn('wp_kses_post', product_tab.title|apply_filters('woocommerce_product_' ~ key ~ '_tab_title', key)) }}
					</a>
				</li>
			{% endfor %}
		</ul>
		{% for key, product_tab in product_tabs %}
			<div class="woocommerce-Tabs-panel woocommerce-Tabs-panel--{{ key|e('html_attr') }} panel entry-content wc-tab" id="tab-{{ key|e('html_attr') }}" role="tabpanel" aria-labelledby="tab-title-{{ key|e('html_attr') }}">
				{% if product_tab.callback %}
					{% do fn('call_user_func', product_tab.callback, key, product_tab) %}
				{% endif %}
			</div>
		{% endfor %}

		{% do action('woocommerce_product_after_tabs') %}
	</div>

{% endif %}
