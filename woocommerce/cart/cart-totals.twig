{##
 # Cart totals
 #
 # This template can be overridden by copying it to yourtheme/woocommerce/cart/cart-totals.php.
 #
 # HOWEVER, on occasion WooCommerce will need to update template files and you
 # (the theme developer) will need to copy the new files to your theme to
 # maintain compatibility. We try to do this as little as possible, but it does
 # happen. When this occurs the version of the template file will be bumped and
 # the readme will list any important changes.
 #
 # @see     https://docs.woocommerce.com/document/template-structure/
 # @package WooCommerce\Templates
 # @version 2.3.6
 #}

<div class="cart_totals {{ customer.has_calculated_shipping() ? 'calculated_shipping' }}">

	{% do action('woocommerce_before_cart_totals') %}

	<h2>{{ __( 'Cart totals', 'woocommerce' ) }}</h2>

	<table cellspacing="0" class="shop_table shop_table_responsive">

		<tr class="cart-subtotal">
			<th>{{ __( 'Subtotal', 'woocommerce' ) }}</th>
			<td data-title="{{ __( 'Subtotal', 'woocommerce' ) }}">{% do fn('wc_cart_totals_subtotal_html') %}</td>
		</tr>

		{% for code,coupon in cart.get_coupons %}
			<tr class="cart-discount coupon-{{ code|slugify }}">
				<th>{% do fn('wc_cart_totals_coupon_label', coupon) %}</th>
				<td data-title="{{ fn('wc_cart_totals_coupon_label', coupon, false) }}">{% do fn('wc_cart_totals_coupon_html', coupon ) %}</td>
			</tr>
		{% endfor %}

		{% if cart.needs_shipping() and cart.show_shipping() %}

			{% do action( 'woocommerce_cart_totals_before_shipping' ) %}

			{% do fn('wc_cart_totals_shipping_html') %}

			{% do action( 'woocommerce_cart_totals_after_shipping' ) %}

		{% elseif cart.needs_shipping() and 'yes' == fn('get_option', 'woocommerce_enable_shipping_calc') %}

			<tr class="shipping">
				<th>{{ __( 'Shipping', 'woocommerce' ) }}</th>
				<td data-title="{{ __('Shipping', 'woocommerce') }}">{% do fn('woocommerce_shipping_calculator') %}</td>
			</tr>

		{% endif %}

		{% for fee in cart.get_fees() %}
			<tr class="fee">
				<th>{{ fee.name }}</th>
				<td data-title="{{ fee.name }}">{% do fn('wc_cart_totals_fee_html', fee) %}</td>
			</tr>
		{% endfor %}

		{% if fn('wc_tax_enabled') and not cart.display_prices_including_tax() %}
			{% set taxable_address = customer.get_taxable_address() %}
			{% set estimated_text  = '' %}

			{% if customer.is_customer_outside_base() and not customer.has_calculated_shipping() %}
				{# translators: %s location. #}
				{% set estimated_text =  ' <small>' ~ __( '(estimated for %s)', 'woocommerce' ) ~ '</small>'|format(countries.estimated_for_prefix(taxable_address[0]) ~ countries.countries[ taxable_address[0] ] ) %}
			{% endif %}

			{% if 'itemized' == fn('get_option', 'woocommerce_tax_total_display') %}
				{% for code,tax in cart.get_tax_totals() %}
					<tr class="tax-rate tax-rate-{{ code|slugify }}">
						<th>{{ tax.label ~ estimated_text }}</th>
						<td data-title="{{ tax.label|e('html_attr') }}">{{ tax.formatted_amount|e('wp_kses_post') }}</td>
					</tr>

				{% endfor %}
			{% else %}
				<tr class="tax-total">
					<th>{{ countries.tax_or_vat()|e('html') ~ estimated_text }}</th>
					<td data-title="{{ countries.tax_or_vat()|e('html_attr') }}">{% do fn('wc_cart_totals_taxes_total_html') %}</td>
				</tr>
			{% endif %}
		{% endif %}

		{% do action( 'woocommerce_cart_totals_before_order_total' ) %}

		<tr class="order-total">
			<th>{{ __( 'Total', 'woocommerce' ) }}</th>
			<td data-title="{{ __( 'Total', 'woocommerce' )|e('html_attr') }}">{% do fn('wc_cart_totals_order_total_html') %}</td>
		</tr>

		{% do action( 'woocommerce_cart_totals_after_order_total' ) %}

	</table>

	<div class="wc-proceed-to-checkout">
		{% do action( 'woocommerce_proceed_to_checkout' ) %}
	</div>

	{% do action( 'woocommerce_after_cart_totals' ) %}

</div>
